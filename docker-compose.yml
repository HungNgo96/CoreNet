version: '3.9'

networks:
  otel-network:
    driver: bridge

volumes:
  prometheus-data:
    driver: local
  grafana_data:
    driver: local
  sql_data:
    driver: local
  seq-data:
    driver: local
  jaeger-data:
    driver: local
  grafana-plugins:
    driver: local

services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: WebApi/Dockerfile
  #   depends_on:
  #     - sqlserver
  #     - rabbitmq
  #     - otel-collector
  #   ports:
  #     - "5001:8080"
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ConnectionStrings__ReadSqlServer=Server=sqlserver,1433;Database=CoreNet01;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;
  #     - ConnectionStrings__WriteSqlServer=Server=sqlserver,1433;Database=CoreNet01;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;
  #     - ConnectionStrings__NoSqlConnection=
  #     - ConnectionStrings__CacheConnection=
  #     - CacheOptions__AbsoluteExpirationInHours=1
  #     - CacheOptions__SlidingExpirationInSeconds=300
  #     - OpenTelemetryOptions__ServiceName=OpenTelemetry_DEV
  #     - OpenTelemetryOptions__Tracing__Enabled=true
  #     - OpenTelemetryOptions__Tracing__Exporter=Otlp
  #     - OpenTelemetryOptions__Tracing__Otlp__Endpoint=http://otel-collector:4317
  #     - OpenTelemetryOptions__Tracing__Otlp__Protocol=Grpc
  #     - OpenTelemetryOptions__Tracing__Otlp__SampleRate=1.0
  #     - OpenTelemetryOptions__Metrics__Enabled=true
  #     - OpenTelemetryOptions__Metrics__Exporter=Otlp
  #     - OpenTelemetryOptions__Metrics__Otlp__Endpoint=http://otel-collector:4317
  #     - OpenTelemetryOptions__Metrics__Otlp__Protocol=Grpc
  #     - OpenTelemetryOptions__Logging__Enabled=true
  #     - OpenTelemetryOptions__Logging__LogLevel__Default=Information
  #     - OpenTelemetryOptions__Logging__LogLevel__Microsoft=Warning
  #     - OpenTelemetryOptions__Logging__Exporter=Serilog
  #     - OpenTelemetryOptions__Logging__Otlp__Endpoint=http://otel-collector:4317
  #     - OpenTelemetryOptions__Logging__Otlp__Protocol=Grpc
  #     - RabbitMQOptions__HostName=rabbitmq
  #     - RabbitMQOptions__Port=5672
  #     - RabbitMQOptions__UserName=guest
  #     - RabbitMQOptions__Password=guest
  #     - RabbitMQOptions__VirtualHost=/
  #     - RabbitMQOptions__Exchange__Name=my_exchange
  #     - RabbitMQOptions__Exchange__Type=direct
  #     - RabbitMQOptions__Exchange__Durable=true
  #     - RabbitMQOptions__Exchange__AutoDelete=false
  #     - RabbitMQOptions__Queue__Name=my_queue
  #     - RabbitMQOptions__Queue__Durable=true
  #     - RabbitMQOptions__Queue__Exclusive=false
  #     - RabbitMQOptions__Queue__AutoDelete=false
  #     - RabbitMQOptions__RetryPolicy__MaxRetryAttempts=5
  #     - RabbitMQOptions__RetryPolicy__InitialInterval=1000
  #     - RabbitMQOptions__RetryPolicy__MaxInterval=5000
  #     - RabbitMQOptions__RetryPolicy__Multiplier=2.0
  #   networks:
  #     - otel-network
  # Aspire Dashboard
  dashboard:
    image: mcr.microsoft.com/dotnet/aspire-dashboard:latest
    container_name: aspire-dashboard
    ports:
      - "18888:18888"
    environment:
    #   - DASHBOARD__OTLP__AUTHMODE=ApiKey
    #   - DASHBOARD__OTLP__PRIMARYAPIKEY=ApiKeyAbc
    #   - ASPNETCORE_ENVIRONMENT=Development
     - DOTNET_DASHBOARD_UNSECURED_ALLOW_ANONYMOUS=true
     - Dashboard__Otlp__AuthMode=Unsecured ##ApiKey, Certificate 
     - DOTNET_Aspire_Dashboard__Authentication__EnableFrontendConnections=true
     # - DOTNET_DASHBOARD_OTLP_HTTP_ENDPOINT_URL = http://localhost:18890
    networks:
      - otel-network
#RabbitMQ service
  rabbitmq:
    container_name: rabbitmq
    image: "rabbitmq:3-management"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"   # RabbitMQ default AMQP port
      - "15672:15672" # RabbitMQ management UI port
    networks:
      - otel-network
    restart: always
#Sql server 2019
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
    ports:
      - "1433:1433"  # Expose SQL Server port to the host (local/Docker container)
      # - "4000"  # Expose SQL Server port to the host (local/Docker container)
    networks:
      - otel-network
    volumes:
      - sql_data:/var/opt/mssql  # Persist data between container restarts
  # sqlserver-exporter:
  #   image: mssql_exporter
  #   container_name: sqlserver-exporter
  #   ports:
  #     - "4000:4000"
  #   environment:
  #     DATA_SOURCE_NAME: "sqlserver://sa:YourStrong!Passw0rd@sqlserver:1433"

 #OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./otel_demo/otel-config.yaml:/etc/otel/config.yaml
      - ./log:/log/otel
    command: --config /etc/otel/config.yaml
    environment:
      JAEGER_ENDPOINT: "jaeger:4317"
      LOKI_ENDPOINT: "http://loki:3100/loki/api/v1/push"
      ZIPKIN_ENDPOINT: "http://zipkin:9411/api/v2/spans"
      PROMETHEUS_ENDPOINT: "0.0.0.0:8889"
      SEQ_ENDPOINT: "http://seq:5341/ingest/otlp"
      ASPIRE_ENDPOINT: "dashboard:18889"
    ports:
      - "8889:8889"   # Prometheus metrics exporter (scrape endpoint)
      - "13133:13133" # health_check extension
      - "55679:55679" # ZPages extension
      - "9464:9464"   # Prometheus metrics
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
    depends_on:
      - jaeger
      - prometheus
      - loki
      - seq
      - dashboard 
    networks:
      - otel-network

  seq:
    image: datalust/seq:latest
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "580:80"
      - "5341:5341"
    # volumes:
    #   - seq-data:/data
    networks:
      - otel-network
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # Jaeger Web UI
    networks:
      - otel-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./otel_demo/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - otel-network

  loki:
    image: grafana/loki:2.7.4
    ports:
      - "3100:3100"
    networks:
      - otel-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./otel_demo/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      # - ./grafana-plugins:/var/lib/grafana/plugins
    environment:
      # GF_AUTH_ANONYMOUS_ENABLED: "true"
      # GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      # GF_INSTALL_PLUGINS: grafana-mssql-datasource
    ports:
      - "3000:3000"
    networks:
      - otel-network
    restart: always

  zipkin:
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    networks:
      - otel-network

